---20160728---
基本tokenManager  v2.0    完成设计，完成测试
最大化测试example  v2.0    完成设计，完成测试
辅助类tmEasyAPI    v1.0    完成设计，完成测试
-TODO-
none

---20160707---
基本tokenManager  v1.0    完成设计，完成测试
最大化测试example  v1.0    完成设计，完成测试
1、独立的token检查程序
2、增加其他peer的读写接口
3、修正cancel里面的错误
-TODO-
1、增加一个辅助类tmEasyAPI，封装出一个最简化api
2、修改原来的报警策略，做按位报警、多报警并存的报警
3、增加一个xml读写类tmXML，封装出一个自动保存设置的功能
---20160704---
1、增加普通peer的state和errorState的QString读取，修改self的state和errorState的QString读取
    QString getSelfStateString() const;
    QString getSelfErrorStateString() const;
    QString getStateString(int index) const;
    QString getErrorStateString(int index) const;
2、增加根据index的int值获取tmPeerInfo
    tmPeerInfo_t* getPeerInfo(int index);
3、增加网络token查找功能
    int findToken();//找到令牌所在peer的index，找不到则返回-1，多于1个则返回-2，同时修改报警状态
4、在判断offline的程序里，加入判断token lost的程序，如果自己优先级最高，自动获取令牌
5、增加判断自己是网络上priority最高的程序
    bool isFirstPriority();//判断本peer是否最高优先级。
6、增加检查优先级的程序。每次优先级更新，要检查
    void checkPriority();//检查优先等级，发现相同优先级则ip地址最后一段较小的peer的优先级++
    当priority发生修改就必须调用该函数进行检查。
---20160703 v0.9
基本tokenManager  v0.9    完成设计，未完成测试
最大化测试example  v0.9    未完成设计
-TODO-
1、强切token需要判断优先级
2、需要增加错误的类型
3、需要增加普通peer的state和errorState的QString读取
4、需要增加超时无主站、优先级最高的直接获得token
5、需要增加根据row的int值获取tmPeerInfo
6、example中要完善切换功能
7、功能测试
---20160624 新建工程
增加doc/plan		计划描述文档
增加src			初始源代码
